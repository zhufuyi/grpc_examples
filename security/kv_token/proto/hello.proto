syntax = "proto3";

package proto;

// hellopb是生成代码的包名称，相对路径必须以./开头，
// 对于老版本protoc-gen-go，go_package不是必须的，参数为 --go_out=plugins=grpc:.时，会自动创建目录helopb
// 对于新版本protoc-gen-go v1.28.0，go_package必须设置的。
option go_package = "./hellopb";


service Greeter {
    rpc SayHello (HelloRequest) returns (HelloReply) {}
}

message HelloRequest {
    string name = 1;
}

message HelloReply {
    string message = 1;
}

/*
// 老版本protoc-gen-go
// 生成代码在当前目录
protoc.exe --go_out=plugins=grpc:. *.proto

// 新版本protoc-gen-go v1.28.0
// 如果设置go_package，生成代码在对应目录下，如果没有设置，生成代码在当前目录，比第一个通用
protoc --go_out=hellopb --go_opt=paths=source_relative --go-grpc_out=hellopb --go-grpc_opt=paths=source_relative *.proto
在原来结构体添加pb.UnimplementedGreeterServer，才能兼容使用。
或者
protoc --go_out=hellopb --go_opt=paths=source_relative --go-grpc_out=hellopb --go-grpc_opt=paths=source_relative --go-grpc_opt=require_unimplemented_servers=false *.proto
*/
